//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace dnSpy.Debugger.CorDebug.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class dnSpy_Debugger_CorDebug_Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal dnSpy_Debugger_CorDebug_Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("dnSpy.Debugger.CorDebug.Properties.dnSpy.Debugger.CorDebug.Resources", typeof(dnSpy_Debugger_CorDebug_Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A_rguments.
        /// </summary>
        public static string DbgAsm_Args {
            get {
                return ResourceManager.GetString("DbgAsm_Args", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _Assembly.
        /// </summary>
        public static string DbgAsm_Assembly {
            get {
                return ResourceManager.GetString("DbgAsm_Assembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _Break at.
        /// </summary>
        public static string DbgAsm_BreakAt {
            get {
                return ResourceManager.GetString("DbgAsm_BreakAt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _Working Directory.
        /// </summary>
        public static string DbgAsm_WorkingDir {
            get {
                return ResourceManager.GetString("DbgAsm_WorkingDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CreateProcess Event.
        /// </summary>
        public static string DbgBreak_CreateProcessEvent {
            get {
                return ResourceManager.GetString("DbgBreak_CreateProcessEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t Break.
        /// </summary>
        public static string DbgBreak_Dont {
            get {
                return ResourceManager.GetString("DbgBreak_Dont", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entry Point.
        /// </summary>
        public static string DbgBreak_EntryPoint {
            get {
                return ResourceManager.GetString("DbgBreak_EntryPoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exe&apos;s First LoadClass Event.
        /// </summary>
        public static string DbgBreak_ExeFirstLoadClassEvent {
            get {
                return ResourceManager.GetString("DbgBreak_ExeFirstLoadClassEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exe&apos;s LoadModule Event.
        /// </summary>
        public static string DbgBreak_ExeLoadModuleEvent {
            get {
                return ResourceManager.GetString("DbgBreak_ExeLoadModuleEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First CreateAppDomain Event.
        /// </summary>
        public static string DbgBreak_FirstCreateAppDomainEvent {
            get {
                return ResourceManager.GetString("DbgBreak_FirstCreateAppDomainEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First CreateThread Event.
        /// </summary>
        public static string DbgBreak_FirstCreateThreadEvent {
            get {
                return ResourceManager.GetString("DbgBreak_FirstCreateThreadEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First LoadClass Event.
        /// </summary>
        public static string DbgBreak_FirstLoadClassEvent {
            get {
                return ResourceManager.GetString("DbgBreak_FirstLoadClassEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First LoadModule Event.
        /// </summary>
        public static string DbgBreak_FirstLoadModuleEvent {
            get {
                return ResourceManager.GetString("DbgBreak_FirstLoadModuleEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Module .cctor or Entry Point.
        /// </summary>
        public static string DbgBreak_ModuleClassConstructorOrEntryPoint {
            get {
                return ResourceManager.GetString("DbgBreak_ModuleClassConstructorOrEntryPoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not start the debugger. {0}.
        /// </summary>
        public static string Error_CouldNotStartDebugger {
            get {
                return ResourceManager.GetString("Error_CouldNotStartDebugger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not start the debugger. Make sure you have access to the file &apos;{0}&apos;
        ///
        ///Error: {1}.
        /// </summary>
        public static string Error_CouldNotStartDebuggerCheckAccessToFile {
            get {
                return ResourceManager.GetString("Error_CouldNotStartDebuggerCheckAccessToFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not start the debugger. The debugged program requires admin privileges. Restart dnSpy with admin rights and try again..
        /// </summary>
        public static string Error_CouldNotStartDebuggerRequireAdminPrivLvl {
            get {
                return ResourceManager.GetString("Error_CouldNotStartDebuggerRequireAdminPrivLvl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file doesn&apos;t exist.
        /// </summary>
        public static string Error_FileDoesNotExist {
            get {
                return ResourceManager.GetString("Error_FileDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing filename.
        /// </summary>
        public static string Error_MissingFilename {
            get {
                return ResourceManager.GetString("Error_MissingFilename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debugger ({0}).
        /// </summary>
        public static string Plugin_ShortDescription {
            get {
                return ResourceManager.GetString("Plugin_ShortDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use dnSpy-x86.exe to debug 32-bit applications..
        /// </summary>
        public static string UseDnSpy64ExeToDebug32 {
            get {
                return ResourceManager.GetString("UseDnSpy64ExeToDebug32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use dnSpy.exe to debug 64-bit applications..
        /// </summary>
        public static string UseDnSpyExeToDebug64 {
            get {
                return ResourceManager.GetString("UseDnSpyExeToDebug64", resourceCulture);
            }
        }
    }
}
